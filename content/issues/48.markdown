---
title: Issue 48
published: 2017-03-30
---

Welcome to Haskell Weekly!
[Haskell](https://haskell-lang.org) is an advanced, purely functional programming language.
This is a weekly summary of what's going on in its community.
You can subscribe to [the email newsletter](https://news.us10.list-manage.com/subscribe?u=49a6a2e17b12be2c5c4dcb232&id=ffbbbbd930)
or [the Atom feed](/haskell-weekly.atom).

Want to contribute to Haskell Weekly?
Send us a message [on Twitter](https://twitter.com/haskellweekly)
or open an issue [on GitHub](https://github.com/haskellweekly/haskellweekly.github.io).

## News from the Haskell community

-   [Efficient CStruct](http://tab.snarc.org/posts/haskell/2017-03-20-compilation-cstruct.html)

    > Dealing with complex C-structure-like data in haskell often forces the developer to have to deal with C files, and create a system that is usually a tradeoff between efficiency, modularity and safety. The `Foreign` class doesn't quite cut it, external program needs C files, and binary parsers are not efficient or modular. Let's see if we can do better using the advanced haskell type system.

-   [Who needs HashLife when you have comonads?](https://samtay.github.io/posts/comonadic-game-of-life.html)

    > I'm going to talk a little bit about Conway's Game of Life, comonads in practical use, and the performance improvement that they have to offer.

-   [How clean does a Haskell codebase remain over time?](https://www.reddit.com/r/haskell/comments/6155r4/how_clean_does_a_haskell_codebase_remain_over_time/)

    > Codebases written in untyped languages most often rot as the years set in. I'm new to Typed FP, and it seems that the static type system in Haskell can help avoid most of these pitfalls. How is this in practice?

-   [Haskell concepts in one sentence](https://torchhound.github.io/posts/haskellOneSentence.html)

    > After years of dragging my feet I've been learning Haskell with the help of a few friends. Many Haskell concepts can be quite daunting so I decided to write one sentence summaries to simplify them for myself. These are not by any means complete but are useful as a jumping off point.

## Package of the week

todo

Send us a message [on Twitter](https://twitter.com/haskellweekly) to nominate next week's package!
